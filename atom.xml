<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Robin&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://lwz7512.github.io/"/>
  <updated>2018-04-08T14:57:46.000Z</updated>
  <id>https://lwz7512.github.io/</id>
  
  <author>
    <name>Li Wenzhi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>running react-native app in browser</title>
    <link href="https://lwz7512.github.io/2018/04/08/running-react-native-app-in-browser/"/>
    <id>https://lwz7512.github.io/2018/04/08/running-react-native-app-in-browser/</id>
    <published>2018-04-08T13:28:46.000Z</published>
    <updated>2018-04-08T14:57:46.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><p>RNA created by create-react-native-app command have great advantages in running on both iOS and Android platform, using the the same code infrastructure. Compared with native development process, the whole dev-lifecycle shorten greatly because of no-need of complete compilation, and hot deploy in device/simulator.</p><p>But these build process, based on packager and running on Expo client, looks like not satisfied and not much efficient as pure reactJS web development workflow. The FAMOUS problem is the <strong> Starting packager… </strong> bug in ‘react-native-scripts’. It exists for more than half a year, and no further fix promoted. Besides, when the js file changed the device/simulator cannot update instantly and timely to see the new result, often need another modification to invoke hot deploy. It’s frustrated.</p><p>So, I need a web solution to run react-native code in browser, and seeing the change result instantly and timely is a must. Then I found the <strong> <a href="https://github.com/taobaofed/react-web" target="_blank" rel="noopener">React Web</a> </strong> .</p><h2 id="How-to"><a href="#How-to" class="headerlink" title="How to"></a>How to</h2><ul><li>first, create a blank reactjs project:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g create-react-app</span><br><span class="line">$ create-react-app my-react-app</span><br></pre></td></tr></table></figure><ul><li>then, install React Web</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd my-react-app</span><br><span class="line">$ npm install --save react-web</span><br></pre></td></tr></table></figure><ul><li>reinstall installed modules</li></ul><p>If running ‘npm start’ in last step, react-scripts error would occur.<br>so, remove all the installed modules then install again:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ rm -rf node_modules</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><ul><li>modify the index.js &amp; App.js</li></ul><p>Booting react-native component is slightly different from web, so, the index.js should make some changes:</p><p>index.js:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">// add this</span><br><span class="line">import &#123;AppRegistry, Platform&#125; from &apos;react-native&apos;;</span><br><span class="line"></span><br><span class="line">// comment this two lines used for web merely</span><br><span class="line">// ReactDOM.render(&lt;App /&gt;, document.getElementById(&apos;root&apos;));</span><br><span class="line">// registerServiceWorker();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// also add these boot method used by native component</span><br><span class="line">AppRegistry.registerComponent(&apos;App&apos;, () =&gt; App);</span><br><span class="line"></span><br><span class="line">if (Platform.OS === &apos;web&apos;) &#123;</span><br><span class="line">  AppRegistry.runApplication(&apos;App&apos;, &#123; rootTag: document.getElementById(&apos;root&apos;) &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>App.js:</p><p>comment all the code originally used, then add below</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">import React, &#123;Component&#125; from &apos;react&apos;;</span><br><span class="line">import &#123;AppRegistry, StyleSheet, Text, View, Platform&#125; from &apos;react-native&apos;;</span><br><span class="line"></span><br><span class="line">class App extends Component &#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    return (</span><br><span class="line">      &lt;View style=&#123;styles.box&#125;&gt;</span><br><span class="line">        &lt;Text style=&#123;styles.text&#125;&gt;Hello, world!&lt;/Text&gt;</span><br><span class="line">      &lt;/View&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const styles = StyleSheet.create(&#123;</span><br><span class="line">  box: &#123;padding: 10&#125;,</span><br><span class="line">  text: &#123;fontWeight: &apos;bold&apos;&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">export default App;</span><br></pre></td></tr></table></figure><ul><li>now, it’s time to start</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm start</span><br></pre></td></tr></table></figure><p>the browser reopened localhost at port 3000, Hello world! successfully showed in screen. Made a change in App.js, then switch to browser, new result refreshed instantly.</p><p>That’s my desired and familiar way!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Background&quot;&gt;&lt;a href=&quot;#Background&quot; class=&quot;headerlink&quot; title=&quot;Background&quot;&gt;&lt;/a&gt;Background&lt;/h2&gt;&lt;p&gt;RNA created by create-react-native-app
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>stuck at Starting packager...</title>
    <link href="https://lwz7512.github.io/2018/04/06/stuck-at-Starting-packager/"/>
    <id>https://lwz7512.github.io/2018/04/06/stuck-at-Starting-packager/</id>
    <published>2018-04-06T13:54:23.000Z</published>
    <updated>2018-04-07T15:33:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>Recently I started to learn react-native app development from zero. Reactjs/react-native has emerging for couples of years, and growing to a very big and mature ecosystem. I had given a glimpse to it, but can not be accustomed with JSX way to mingle script/template/style into one file. As an AngularJS/Ionic developer for almost 4 years, I gradually realized the limitation of the Ionic/Cordova approach. So, I began to step into reactive world this year.</p><p>After several days of official reactjs/react-native documentation reading, I start to create my first react-native app. Things changed a lot since the first publish of react-native, now it recommends to use <strong> create-react-native-app </strong> to start a RNA.</p><ul><li>install create-react-native-app globally</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g create-react-native-app</span><br></pre></td></tr></table></figure><ul><li>create rn-app with create-react-native-app cli</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ create-react-native-app rn-my-app</span><br></pre></td></tr></table></figure><ul><li><p>install Expo client in mobile phone to preview your RNA</p><p><a href="https://expo.io/tools" target="_blank" rel="noopener">Expo official site</a></p></li><li><p>enter app dir and start dev server</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd rn-my-app</span><br><span class="line">$ npm start</span><br></pre></td></tr></table></figure><p>less than 20 seconds, you will the the following the output in console:</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"> &gt; rn-my-app@0.1.0 start /Users/username/mobile/rn-my-app</span><br><span class="line"> &gt; react-native-scripts start</span><br><span class="line"></span><br><span class="line"> 22:40:00: Starting packager...</span><br><span class="line"> Packager started!</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">A BIG QR CODE IMAGE HERE</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> Your app is now running at URL: exp://192.168.1.103:19000</span><br><span class="line"></span><br><span class="line"> View your app with live reloading:</span><br><span class="line"></span><br><span class="line">   Android device:</span><br><span class="line">     -&gt; Point the Expo app to the QR code above.</span><br><span class="line">        (You&apos;ll find the QR scanner on the Projects tab of the app.)</span><br><span class="line">   iOS device:</span><br><span class="line">     -&gt; Press s to email/text the app URL to your phone.</span><br><span class="line">   Emulator:</span><br><span class="line">     -&gt; Press a (Android) or i (iOS) to start an emulator.</span><br><span class="line"></span><br><span class="line"> Your phone will need to be on the same local network as this computer.</span><br><span class="line"> For links to install the Expo app, please visit https://expo.io.</span><br><span class="line"></span><br><span class="line"> Logs from serving your app will appear here. Press Ctrl+C at any time to stop.</span><br><span class="line"></span><br><span class="line">  › Press a to open Android device or emulator, or i to open iOS emulator.</span><br><span class="line">  › Press s to send the app URL to your phone number or email address</span><br><span class="line">  › Press q to display QR code.</span><br><span class="line">  › Press r to restart packager, or R to restart packager and clear cache.</span><br><span class="line">  › Press d to toggle development mode. (current mode: development)</span><br></pre></td></tr></table></figure><p>I tried to use Expo app installed in my Android mobile to scan the QR code, but nothing happened. Then I press <code>a</code> in console, the application showed in screen(my Mac connected to mobile by usb cable).</p><p>To see the modified result of the app, just made some changes in App.js then waiting for rebuilding process and new content will present in the screen.</p><p>It looks like easy and smooth, everything is OK until I press Ctrl+c to shutdown the dev server.</p><blockquote><p>When I attempted to restart the packager by <strong> npm start –reset-cache </strong> , it stopped in Starting packager…</p></blockquote><p>even waited for couples of minutes, NO further progress AT ALL!!!</p><p>Then ctrl+c an restart again repeatedly and repeatedly… no changes.</p><p>…</p><p>It made me almost crazy for this, the build server can’t start again and development process stopped there also. So, there is no choice but to turn to search engine, finally, I found the post:</p><blockquote><p>Stuck in “Starting packager”</p></blockquote><blockquote><p><a href="https://github.com/react-community/create-react-native-app/issues/203" target="_blank" rel="noopener">https://github.com/react-community/create-react-native-app/issues/203</a></p></blockquote><p>and this:</p><blockquote><p>react-native-scripts start stuck at “Starting packager…”</p></blockquote><blockquote><p><a href="https://github.com/react-community/create-react-native-app/issues/343" target="_blank" rel="noopener">https://github.com/react-community/create-react-native-app/issues/343</a></p></blockquote><p>The key solution is the watchman tool to kill all the file monitor process, then would be successful restart.</p><p>so, install watchman first:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ brew update</span><br><span class="line">$ brew install watchman</span><br></pre></td></tr></table></figure><p>then, executing the watchman delete &amp; shutdown command, console print the clear result:</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> [username@~] $ watchman watch-del-all &amp;&amp; watchman shutdown-server</span><br><span class="line">&#123;</span><br><span class="line">    &quot;version&quot;: &quot;4.9.0&quot;,</span><br><span class="line">    &quot;roots&quot;: [</span><br><span class="line">        &quot;/Users/username/mobile/rn-my-app&quot;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">    &quot;version&quot;: &quot;4.9.0&quot;,</span><br><span class="line">    &quot;shutdown-server&quot;: true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> last, executing the restart command in app root:</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[liwenzhi@~/mobile/rn-my-app] $ npm start --reset-cache</span><br></pre></td></tr></table></figure><p>14 seconds later, the Packager started!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Recently I started to learn react-native app development from zero. Reactjs/react-native has emerging for couples of years, and growing t
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>flex box vs grid layout in implementation of image card</title>
    <link href="https://lwz7512.github.io/2018/03/28/flex-box-vs-grid-layout-in-implementation-of-image-card/"/>
    <id>https://lwz7512.github.io/2018/03/28/flex-box-vs-grid-layout-in-implementation-of-image-card/</id>
    <published>2018-03-28T00:52:15.000Z</published>
    <updated>2018-03-28T03:28:50.000Z</updated>
    
    <content type="html"><![CDATA[<p>Html element layout process seems to be simple for a trained coder, the same as a skilled front-end coder, just a piece of cake. But the fact is that even to me, working with javascript/html/css for many years occasionally lost in how to center an image with equal margin.</p><p>Below is a mini-program image card, constructed by view and css, it consumed me couples of hour to complete it…. <strong>-_-||</strong> … It’s so frustrated that I begin to doubt I’m too old to do this….</p><p><img src="/img/image_card.png" alt=""></p><p>the view structure is simple:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- image header card --&gt;</span><br><span class="line">&lt;view class=&quot;card&quot;&gt;</span><br><span class="line">  &lt;view class=&quot;image-roundcorner&quot;&gt;</span><br><span class="line">    &lt;image class=&quot;header-img shadow&quot; src=&quot;../../images/card_header_img1.png&quot;&gt;&lt;/image&gt;</span><br><span class="line">  &lt;/view&gt;</span><br><span class="line">  &lt;view class=&quot;footer &quot;&gt;</span><br><span class="line">    &lt;view class=&quot;footer-title&quot;&gt;揭秘区块链系列&lt;/view&gt;</span><br><span class="line">    &lt;view class=&quot;footer-tags shadow&quot;&gt;</span><br><span class="line">      &lt;text class=&quot;tag&quot;&gt;创新科技&lt;/text&gt;</span><br><span class="line">      &lt;text class=&quot;tag&quot;&gt;创新科技&lt;/text&gt;</span><br><span class="line">      &lt;text class=&quot;tag&quot;&gt;创新科技&lt;/text&gt;</span><br><span class="line">    &lt;/view&gt;</span><br><span class="line">  &lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br></pre></td></tr></table></figure><p>The card class define the card’s size merely, 100% width and 255px height. The most confusing part is centering the header image and leave the left and the right equal margin to screen border. I had thought that just having the image container 100% with and margin: 0 10px would realize the expectation. But it turned out I’m thinking too easy. The working design ending up in this:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">.card .image-roundcorner &#123;</span><br><span class="line">  width: 100%;</span><br><span class="line">  height: 150px;</span><br><span class="line"></span><br><span class="line">  /* image container just define a center-ability box */</span><br><span class="line">  display: flex;</span><br><span class="line">  justify-content: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.card .header-img &#123;</span><br><span class="line">  width: 100%;</span><br><span class="line">  height: 100%;</span><br><span class="line"></span><br><span class="line">  /* importantly place here to determine center &amp; LR margin */</span><br><span class="line">  margin: 0 10px;</span><br><span class="line"></span><br><span class="line">  border-top-left-radius: 10px;</span><br><span class="line">  border-top-right-radius: 10px;</span><br><span class="line">  overflow: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>As for footer, to center two row text and leave equal margin, <strong>flex-direction</strong> is a must:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.card .footer &#123;</span><br><span class="line">  width: 100%;</span><br><span class="line">  height: auto;</span><br><span class="line"></span><br><span class="line">  display: flex;</span><br><span class="line">  justify-content: center;</span><br><span class="line"></span><br><span class="line">  /* vertically arrange the children */</span><br><span class="line">  flex-direction: column;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>All this layout details and small techniques are not difficult or tricky for a skilled front-end coder writing them daily, but could drive someone unfamiliar  about this crazy.</p><p>Finally I compared the flex box layout method with grid layout, the result showed that css grid can greatly cut down the code amount(~10% saved), the view structure simplified as well:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- optimized image header card --&gt;</span><br><span class="line">&lt;view class=&quot;grid-card&quot;&gt;</span><br><span class="line">  &lt;image class=&quot;header-img&quot; src=&quot;../../images/card_header_img2.png&quot;&gt;&lt;/image&gt;</span><br><span class="line">  &lt;text class=&quot;footer-title&quot;&gt;谈创新你必须知道这些&lt;/text&gt;</span><br><span class="line">  &lt;view class=&quot;footer-tags shadow&quot;&gt;</span><br><span class="line">    &lt;text class=&quot;tag&quot;&gt;创新科技&lt;/text&gt;</span><br><span class="line">    &lt;text class=&quot;tag&quot;&gt;创新科技&lt;/text&gt;</span><br><span class="line">    &lt;text class=&quot;tag&quot;&gt;创新科技&lt;/text&gt;</span><br><span class="line">  &lt;/view&gt;</span><br><span class="line">&lt;/view&gt;</span><br></pre></td></tr></table></figure><p>2 view container reduced thanks for display: grid;</p><ul><li><p>first define a grid card structure with column and row:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.grid-card &#123;</span><br><span class="line">  width: 100%;</span><br><span class="line">  height: 255px;</span><br><span class="line"></span><br><span class="line">  display: grid;</span><br><span class="line">  grid-template-columns: 10px auto 10px;</span><br><span class="line">  grid-template-rows: 150px 42px 46px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>then just put the element in it directly :</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">.grid-card .header-img &#123;</span><br><span class="line">  grid-column: 2/3;</span><br><span class="line">  grid-row: 1/2;</span><br><span class="line"></span><br><span class="line">  width: 100%;</span><br><span class="line">  height: 150px;</span><br><span class="line"></span><br><span class="line">  border-top-left-radius: 10px;</span><br><span class="line">  border-top-right-radius: 10px;</span><br><span class="line">  overflow: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>The total layout process are clear and under the control, it’s a big advance compared with flex box layout. So, it’s time to leap toward to css grid layout age.</p><p>…</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Html element layout process seems to be simple for a trained coder, the same as a skilled front-end coder, just a piece of cake. But the 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Finally I am here</title>
    <link href="https://lwz7512.github.io/2018/03/23/Finally-I-am-here/"/>
    <id>https://lwz7512.github.io/2018/03/23/Finally-I-am-here/</id>
    <published>2018-03-23T02:34:03.000Z</published>
    <updated>2018-03-26T01:53:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>It’s been a long time not writing something formal, especially when I went through the failure of my first startup. After years of re-adjusting in job and family, now I moved to a new city with family members and started a new life. In order to keep me make daily progress in technical and english, I setup this hexo blog, and decide to record something useful everyday.</p><p>I believe that I have much to learn in my field(Front-end/Mobile App Dev), even working on these stuff for more than 10 years, there still remains much new untouched. By reviewing the works/projects of past couples of years, I found that It’s too miserable, no success, no proud, no value…</p><p>This year, 2018, keep learning , writing blog, participating in open source projects, doing something valuable stuff, even tiny. Forget those nonsense and bullshit politics, focus on my mission, go, now!</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;It’s been a long time not writing something formal, especially when I went through the failure of my first startup. After years of re-adj
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://lwz7512.github.io/2016/05/26/hello-world/"/>
    <id>https://lwz7512.github.io/2016/05/26/hello-world/</id>
    <published>2016-05-25T22:00:00.000Z</published>
    <updated>2018-03-23T02:44:07.000Z</updated>
    
    <content type="html"><![CDATA[<p>Prepare to launch…</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Prepare to launch…&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="Movies" scheme="https://lwz7512.github.io/tags/Movies/"/>
    
      <category term="Life" scheme="https://lwz7512.github.io/tags/Life/"/>
    
  </entry>
  
</feed>
